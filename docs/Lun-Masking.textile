# LUN Masking

Access and devices visibility management (LUN masking) allows for an initiator or
group of initiators to see different devices with different LUNs
with necessary access permissions.

dedupv1d supports two modes of access control:

1. Target-oriented. In this mode you define for each target devices and
their LUNs, which are accessible to all initiators, connected to that
target. This is a regular access control mode, which people usually mean
thinking about access control in general. 

All volumes added to a target are visible to initiators connecting to the target.

2. Initiator-oriented. In this mode you define which devices and their
LUNs are accessible for each initiator. In this mode you should create
for each set of one or more initiators, which should access to the same
set of devices with the same LUNs, a separate security group, then add
to it available devices and names of allowed initiator(s).

Both modes can be used simultaneously. In this case initiator-oriented
mode has higher priority, than target-oriented.

When a initiator connects, the SCST core finds the corresponding
devices for it using the following algorithm:

1. It searches through all defined groups trying to find group
containing the initiator name. If it succeeds, the found group is used.

2. Otherwise, it searches through all targets. If the target has assigned volumes, the volumes assigned
to the group are used.

3. Otherwise, a group with name "Default" is used.

To configure access and devices visibility management dedupv1d provides the
following utility commands:

 * dedupv1_volumes target add id=1 target=iqn.2010-10.info.christmann:dedup:0

Adds the volume with the id 1 to the target iqn.2010-10.info.christmann:dedup as LUN 0

 * dedupv1_volumes target remove id=1 target=iqn.2010-10.info.christmann:dedup
Removes the volume with the id 1 from the target iqn.2010-10.info.christmann:dedup 

 * dedupv1_groups initiator add name=backups initiator=21:*:e0:?b:83:*
 * dedupv1_groups initiator remove name=backups initiator=21:*:e0:?b:83:*

You can use simple DOS-type patterns, containing '*' and '?' symbols. '*' means match all any symbols, '?'
means match only any single symbol. For instance, "blah.xxx" will match "bl?h.*". Additionally, you can use negative sign '!' to revert the value of the pattern. For instance, "ah.xxx" will match "!bl?h.*".

## Examples:

Consider you need to have an iSCSI target with name "iqn.2007-05.com.example:storage.disk1.sys1.xyz" which should export volume "dev1" with LUN 0
and volume "dev2" with LUN 1, but initiator with name "iqn.2007-05.com.example:storage.disk1.spec_ini.xyz" should see only
volume "dev2" with LUN 0. To achieve that you should do the following commands:

    dedupv1_volume target add id=1 name=iqn.2007-05.com.example:storage.disk1.sys1.xyz:0
    dedupv1_volume target add id=2 name=iqn.2007-05.com.example:storage.disk1.sys1.xyz:1
    dedupv1_group add spec_ini
    dedupv1_volume group add id=2 name=spec_ini:0
    dedupv1_group initiator add name=spec_ini initiator=iqn.2007-05.com.example:storage.disk1.spec_ini.xyz

There must be LUN 0 in each group and target, i.e. LUs numeration must not
start from, e.g., 1. Otherwise you will see no devices on remote
initiators. SCST core will write into the kernel log message: "tgt_dev
for LUN 0 not found, command to unexisting LU?"

**Note: The text and the examples are taken from the SCST README. Rewrite before publication to avoid copyright issues.**