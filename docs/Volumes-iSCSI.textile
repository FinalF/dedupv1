h1. Using dedupv1 Volumes over iSCSI

iSCSI is a way to provide a storage area network (SAN) functionality over the IP protocol network stacks. Usually iSCSI is done over 1GB or 10GB Ethernet networks.

h2. Configuration

dedupv1d supports iSCSI out of the box. There is no special configuration necessary.

Dynamic iSCSI target are managed by the dedupv1_targets tool. The following command adds a new target
<code>dedupv1_targets add tid=TID name=IQN</code>
Here TID is a unique (positive) id and IQN is the name of the iSCSI target in the form a an iSCSI qualified name (IQN). An IQN has the form
iqn.yyyy-mm.{reversed domain name} (e.g. iqn.2010-06.info.christmann:storage.disk1).

An iSCSI target can be removed via
<code>dedupv1_targets remove tid=TID</code>
TID is the target id of an existing target. The target to be deleted is not allowed to have any open connection (called session) nor can it have assigned iSCSI users or volumes (LUNs). While it is possible to overrule these checks via --force it is certainly not advised to do so.

All currently configured targets can be shown via <code>dedupv1_targets show</code>

h2. LUN masking

Without any other configuration, a target exports all volumes that are member of the security group called "Default". Using LUN masking, the set of volumes exported via the target can be customized. This is done by assigning a volume to a target
<code>dedupv1_volumes target add id=VID target=TARGET:LUN</code>
Here, VID is the id of a volume, TARGET is the iqn of an existing target and LUN is the number of a not assigned lun of the volume. The lun 0 of a target should always be assigned according to the SCSI spec.

A volume can be released from a target via
<code>dedupv1_volumes target remove id=VID target=TARGET</code>.

If no volumes are assigned to a target, SCST does an initiator-based LUN masking via a group system.
A (security) group consists of a series of assigned volumes and a series of initiator pattern. If a target has no assigned volumes, SCST searches a group which matches an initiator pattern and -- if it finds one -- uses the volumes in the group.
Groups are managed via the dedupv1_groups utility. A new group is created as follows:
<code>dedupv1_groups add name=GN</code> where GN is a unique group name.

Volumes are assigned to a group very similar to the assignment to targets:
<code>dedupv1_volumes group add id=VID group=GROUP:LUN</code>
Also similar is the removal:
<code>dedupv1_volumes group remove id=VID group=GROUP</code>

All currently configured groups can be shown via <code>dedupv1_groups show</code>

An initiator pattern is added to a group as follows:
<code>deduvp1_group initiator add name=GN initiator=IP</code>
GN is the group name and IP is an initiator name or an initiator pattern. For example to assign all Ubuntu/Debian systems with a default initiator name to a group use the pattern "iqn.1993-08.org.debian:*". The wildcards "*" and "?" are supported.

A initiator pattern is removed from a group via:
<code>deduvp1_group initiator remove name=GN initiator=IP</code>

For example (the example is derived from the SCST Readme), consider you need to have an iSCSI target with name
"iqn.2007-05.com.example:storage.backup1" with a volume dev1 (id 1) as LUN 0 and dev2 (id 2) as LUN 1. Let us assume the volumes are already created. You would create this target as follows:
<code>dedupv1_targets add tid=2 name=iqn.2007-05.com.example:storage.backup1</code>
<code>dedupv1_volumes target add id=1 name=iqn.2007-05.com.example:storage.backup1:0</code>
<code>dedupv1_volumes target add id=2 name=iqn.2007-05.com.example:storage.backup1:1</code>

But the initiator with name
"iqn.2007-05.com.example:storage.disk1.spec_ini.xyz" should see only the volume "dev2" with LUN 0. 
To achieve that you should do the following commands:
<code>dedupv1_groups add name=backup_special</code>
<code>dedupv1_groups initiator add name=backup_special initiator=iqn.2007-05.com.example:storage.disk1.spec_ini.xy</code>
<code>dedupv1_volumes group add id=1 group=backup_special:0</code>

h2. iSCSI security

Besides the LUN masking, iSCSI supports the authentication of users. In dedupv1d iSCSI users are managed via dedupv1_users.
An iSCSI user is created via <code>dedupv1_users add name=UN secret=PASSWORD</code> where UN is a unique username and PASSWORD is an at least 12 character password. It should be noted that the password has to be stored in clear text, so it is recommended to use unique passwords. A user is removed as usual via <code>deduvp1_users remove name=UN</code>.

A user is than assigned to a target via <code>dedupv1_users target add name=UN target=TARGET</code> and removed via </code>dedupv1_users target remove name=UN target=TARGET</code>.

All currently configured users can be shown via <code>dedupv1_users show</code>

h2. Pre configuration

Besides the dynamic management of volumes, targets, groups and users, dedupv1d allows also pre-configured volumes, targets, groups, and users. In dedupv1d pre-configured entries cannot be managed via the above commands, so the entities are essentially read-only with regards to their configuration. It is not supported to add or remove pre-configured entities after the initial start of the system. The goal of the pre-configuration is to make the testing of a system faster and easier. It should not be considered for production usage.

Here is an example that shows all basic elements:

pre. user=admin1
user.secret=geheimsehrgeheim
user.target=iqn.2005.05.de.dedupv1:example
group=Default
group.initiator=bla*
group=admin
group.initiator=21:*:e0:?b:83:*
target=1
target.name=iqn.2005-05.de.dedupv1:example
target.param.QueuedCommands=16
volume.id=0
volume.device-name=dedupv1
volume.group=Default:0
volume.target=iqn.2005-05.de.dedupv1:example:0
volume.logical-size=1T
volume.threads=24