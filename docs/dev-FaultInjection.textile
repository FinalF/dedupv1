h2. Overview

The dedupv1 system provide a fault injection framework.

The goal is to crash the system at certain critical points of the code path in a controlled way. You can simulate a crash using kill -9, but it is nearly impossible to test special critical situations or the repeat critical tests.

h2. Usage

 * The fault injection framework is not active by default. It is compiled in with the --fault-inject flag for scons.
 * A fault point is declared using the FAULT_POINT(id) macro:
   <pre>FAULT_POINT("block-index.write-deleted-log.pre");</pre>
 * The "fault_point_finder.py":https://github.com/dmeister/dedupv1/blob/master/contrib/fault_point_finder/src/fault_point_finder.py script in
   contrib/fault_point_finder finds all available fault points in the system.
 * If the system is started, you can activate a fault point using the fault_inject monitor:
   <pre>bin/dedupv1_mon fault_inject crash=block-index.write-deleted-log.pre</pre>
   When a thread of execution reaches that fault point the next time, the system is crashed using abort.
 * Needless to say that the fault injection framework should ever be activated in release versions.