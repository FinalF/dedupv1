from os.path import join, basename
import glob

project = "dedupv1_base_test"

Import("env", "build_mode")

localenv = env.Clone()
Export("localenv")

localenv["CPPFLAGS"].append("-DDEDUPV1_TEST")
localenv["LIBS"].append("gtest")

dedupv1_base_obj = localenv.SConscript("#base/src/SConscript", variant_dir = join("dedupv1_base_obj"))   
dedupv1_base_pb_obj = localenv.SConscript("#base/resources/SConscript", variant_dir = join("dedupv1_base_pb_obj"))
dedupv1_base_shared_test_obj = localenv.SConscript("#base/shared_test/SConscript", variant_dir = join("dedupv1_base_shared_test_obj"))

dedupv1_base_test_src = Glob("*.cc")
prog = localenv.Program(project, 
                source = dedupv1_base_obj + dedupv1_base_test_src + dedupv1_base_shared_test_obj + dedupv1_base_pb_obj, 
                CPPPATH = localenv["CPPPATH"] + ["#base/include","#base/resources"],
                 )
localenv.Alias("all", project)
localenv.Alias("test", project)
localenv.Alias(project, prog)
